#include<iostream>
#include<fstream>
#include<exception>
#include<string>
using namespace std;

int main(int argc, char** argv){
    int isr_with_errorcode[]={8,10,11,12,13,14,17,21};

    if(argc!=3){
        throw invalid_argument(string("syntax: ")+argv[0]+" <c_generated_isrs> <asm_generated_isrs>");
    }

    ofstream fout_c(argv[1]);
    ofstream fout_asm(argv[2]);

    if(fout_c.bad()||fout_asm.bad()){
        throw invalid_argument("invalid files, or not enough permissions");
    }

    fout_asm<<"; This file is generated by tools/isrgen/gen.cpp\n";
    fout_c<<"// This file is generated by tools/isrgen/gen.cpp\n";

    fout_c<<R"==(
#include<i686/idt.h>
#include<i686/gdt.h>

)==";

for(int i=0; i<256; i++){
    fout_c<<"void __attribute__((cdecl)) i686_isr"<<i<<"();\n";
}

fout_c<<R"==(
void i686_isr_init_gates(){
)==";

    for(int i=0, j=0; i<256; i++){
        fout_c<<"    i686_idt_setgate("<<i<<", i686_isr"<<i<<", i686_GDT_CODE_SEGMENT, IDT_FLAG_RING0 | IDT_FLAG_GATE_32BIT_INT);\n";

        if(j<sizeof(isr_with_errorcode)&&i==isr_with_errorcode[j]){
            fout_asm<<"isr_error_interr "<<i<<"\n";
            j++;
        }else{
            fout_asm<<"isr_noerror_interr "<<i<<"\n";
        }

    }

    fout_c<<R"==(
}
)==";

    fout_c.close();
    fout_asm.close();
}